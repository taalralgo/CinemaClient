//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CinemaCLIENT.ActorServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Actor", Namespace="http://schemas.datacontract.org/2004/07/FilmLibrary.Les_Modeles")]
    [System.SerializableAttribute()]
    public partial class Actor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CinemaCLIENT.ActorServiceReference.Film[] FilmsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrenomField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CinemaCLIENT.ActorServiceReference.Film[] Films {
            get {
                return this.FilmsField;
            }
            set {
                if ((object.ReferenceEquals(this.FilmsField, value) != true)) {
                    this.FilmsField = value;
                    this.RaisePropertyChanged("Films");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nom {
            get {
                return this.NomField;
            }
            set {
                if ((object.ReferenceEquals(this.NomField, value) != true)) {
                    this.NomField = value;
                    this.RaisePropertyChanged("Nom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prenom {
            get {
                return this.PrenomField;
            }
            set {
                if ((object.ReferenceEquals(this.PrenomField, value) != true)) {
                    this.PrenomField = value;
                    this.RaisePropertyChanged("Prenom");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Film", Namespace="http://schemas.datacontract.org/2004/07/FilmLibrary.Les_Modeles")]
    [System.SerializableAttribute()]
    public partial class Film : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Languag_origineIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CinemaCLIENT.ActorServiceReference.Language LanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LanguageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CinemaCLIENT.ActorServiceReference.Language Language_origineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LenghtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Release_yearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Remplacement_costField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Rental_durationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Rental_rateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Special_featuresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CinemaCLIENT.ActorServiceReference.Store[] StoresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Languag_origineID {
            get {
                return this.Languag_origineIDField;
            }
            set {
                if ((this.Languag_origineIDField.Equals(value) != true)) {
                    this.Languag_origineIDField = value;
                    this.RaisePropertyChanged("Languag_origineID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CinemaCLIENT.ActorServiceReference.Language Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LanguageID {
            get {
                return this.LanguageIDField;
            }
            set {
                if ((this.LanguageIDField.Equals(value) != true)) {
                    this.LanguageIDField = value;
                    this.RaisePropertyChanged("LanguageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CinemaCLIENT.ActorServiceReference.Language Language_origine {
            get {
                return this.Language_origineField;
            }
            set {
                if ((object.ReferenceEquals(this.Language_origineField, value) != true)) {
                    this.Language_origineField = value;
                    this.RaisePropertyChanged("Language_origine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Lenght {
            get {
                return this.LenghtField;
            }
            set {
                if ((this.LenghtField.Equals(value) != true)) {
                    this.LenghtField = value;
                    this.RaisePropertyChanged("Lenght");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((object.ReferenceEquals(this.RatingField, value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Release_year {
            get {
                return this.Release_yearField;
            }
            set {
                if ((this.Release_yearField.Equals(value) != true)) {
                    this.Release_yearField = value;
                    this.RaisePropertyChanged("Release_year");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Remplacement_cost {
            get {
                return this.Remplacement_costField;
            }
            set {
                if ((this.Remplacement_costField.Equals(value) != true)) {
                    this.Remplacement_costField = value;
                    this.RaisePropertyChanged("Remplacement_cost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rental_duration {
            get {
                return this.Rental_durationField;
            }
            set {
                if ((this.Rental_durationField.Equals(value) != true)) {
                    this.Rental_durationField = value;
                    this.RaisePropertyChanged("Rental_duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rental_rate {
            get {
                return this.Rental_rateField;
            }
            set {
                if ((this.Rental_rateField.Equals(value) != true)) {
                    this.Rental_rateField = value;
                    this.RaisePropertyChanged("Rental_rate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Special_features {
            get {
                return this.Special_featuresField;
            }
            set {
                if ((object.ReferenceEquals(this.Special_featuresField, value) != true)) {
                    this.Special_featuresField = value;
                    this.RaisePropertyChanged("Special_features");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CinemaCLIENT.ActorServiceReference.Store[] Stores {
            get {
                return this.StoresField;
            }
            set {
                if ((object.ReferenceEquals(this.StoresField, value) != true)) {
                    this.StoresField = value;
                    this.RaisePropertyChanged("Stores");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Language", Namespace="http://schemas.datacontract.org/2004/07/FilmLibrary.Les_Modeles")]
    [System.SerializableAttribute()]
    public partial class Language : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CinemaCLIENT.ActorServiceReference.Film[] FilmsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CinemaCLIENT.ActorServiceReference.Film[] Films {
            get {
                return this.FilmsField;
            }
            set {
                if ((object.ReferenceEquals(this.FilmsField, value) != true)) {
                    this.FilmsField = value;
                    this.RaisePropertyChanged("Films");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Store", Namespace="http://schemas.datacontract.org/2004/07/FilmLibrary.Les_Modeles")]
    [System.SerializableAttribute()]
    public partial class Store : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CinemaCLIENT.ActorServiceReference.Adresse AdresseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AdresseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CinemaCLIENT.ActorServiceReference.Customer[] ClientsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CinemaCLIENT.ActorServiceReference.Film[] FilmsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CinemaCLIENT.ActorServiceReference.Staff[] StaffsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CinemaCLIENT.ActorServiceReference.Adresse Adresse {
            get {
                return this.AdresseField;
            }
            set {
                if ((object.ReferenceEquals(this.AdresseField, value) != true)) {
                    this.AdresseField = value;
                    this.RaisePropertyChanged("Adresse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AdresseID {
            get {
                return this.AdresseIDField;
            }
            set {
                if ((this.AdresseIDField.Equals(value) != true)) {
                    this.AdresseIDField = value;
                    this.RaisePropertyChanged("AdresseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CinemaCLIENT.ActorServiceReference.Customer[] Clients {
            get {
                return this.ClientsField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientsField, value) != true)) {
                    this.ClientsField = value;
                    this.RaisePropertyChanged("Clients");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CinemaCLIENT.ActorServiceReference.Film[] Films {
            get {
                return this.FilmsField;
            }
            set {
                if ((object.ReferenceEquals(this.FilmsField, value) != true)) {
                    this.FilmsField = value;
                    this.RaisePropertyChanged("Films");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CinemaCLIENT.ActorServiceReference.Staff[] Staffs {
            get {
                return this.StaffsField;
            }
            set {
                if ((object.ReferenceEquals(this.StaffsField, value) != true)) {
                    this.StaffsField = value;
                    this.RaisePropertyChanged("Staffs");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Adresse", Namespace="http://schemas.datacontract.org/2004/07/FilmLibrary.Les_Modeles")]
    [System.SerializableAttribute()]
    public partial class Adresse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CinemaCLIENT.ActorServiceReference.City CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CinemaCLIENT.ActorServiceReference.Customer[] ClientsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DistrictField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CinemaCLIENT.ActorServiceReference.Staff[] StaffsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CinemaCLIENT.ActorServiceReference.Store[] StoresField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CinemaCLIENT.ActorServiceReference.City City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CityID {
            get {
                return this.CityIDField;
            }
            set {
                if ((this.CityIDField.Equals(value) != true)) {
                    this.CityIDField = value;
                    this.RaisePropertyChanged("CityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CinemaCLIENT.ActorServiceReference.Customer[] Clients {
            get {
                return this.ClientsField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientsField, value) != true)) {
                    this.ClientsField = value;
                    this.RaisePropertyChanged("Clients");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string District {
            get {
                return this.DistrictField;
            }
            set {
                if ((object.ReferenceEquals(this.DistrictField, value) != true)) {
                    this.DistrictField = value;
                    this.RaisePropertyChanged("District");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nom {
            get {
                return this.NomField;
            }
            set {
                if ((object.ReferenceEquals(this.NomField, value) != true)) {
                    this.NomField = value;
                    this.RaisePropertyChanged("Nom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CinemaCLIENT.ActorServiceReference.Staff[] Staffs {
            get {
                return this.StaffsField;
            }
            set {
                if ((object.ReferenceEquals(this.StaffsField, value) != true)) {
                    this.StaffsField = value;
                    this.RaisePropertyChanged("Staffs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CinemaCLIENT.ActorServiceReference.Store[] Stores {
            get {
                return this.StoresField;
            }
            set {
                if ((object.ReferenceEquals(this.StoresField, value) != true)) {
                    this.StoresField = value;
                    this.RaisePropertyChanged("Stores");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/FilmLibrary.Les_Modeles")]
    [System.SerializableAttribute()]
    public partial class Customer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CinemaCLIENT.ActorServiceReference.Adresse AdresseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AdresseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CinemaCLIENT.ActorServiceReference.Payment[] PaymentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] PictureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrenomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CinemaCLIENT.ActorServiceReference.Rental[] RentalsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CinemaCLIENT.ActorServiceReference.Store StoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StoreIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CinemaCLIENT.ActorServiceReference.Adresse Adresse {
            get {
                return this.AdresseField;
            }
            set {
                if ((object.ReferenceEquals(this.AdresseField, value) != true)) {
                    this.AdresseField = value;
                    this.RaisePropertyChanged("Adresse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AdresseID {
            get {
                return this.AdresseIDField;
            }
            set {
                if ((this.AdresseIDField.Equals(value) != true)) {
                    this.AdresseIDField = value;
                    this.RaisePropertyChanged("AdresseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nom {
            get {
                return this.NomField;
            }
            set {
                if ((object.ReferenceEquals(this.NomField, value) != true)) {
                    this.NomField = value;
                    this.RaisePropertyChanged("Nom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CinemaCLIENT.ActorServiceReference.Payment[] Payments {
            get {
                return this.PaymentsField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentsField, value) != true)) {
                    this.PaymentsField = value;
                    this.RaisePropertyChanged("Payments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Picture {
            get {
                return this.PictureField;
            }
            set {
                if ((object.ReferenceEquals(this.PictureField, value) != true)) {
                    this.PictureField = value;
                    this.RaisePropertyChanged("Picture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prenom {
            get {
                return this.PrenomField;
            }
            set {
                if ((object.ReferenceEquals(this.PrenomField, value) != true)) {
                    this.PrenomField = value;
                    this.RaisePropertyChanged("Prenom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CinemaCLIENT.ActorServiceReference.Rental[] Rentals {
            get {
                return this.RentalsField;
            }
            set {
                if ((object.ReferenceEquals(this.RentalsField, value) != true)) {
                    this.RentalsField = value;
                    this.RaisePropertyChanged("Rentals");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CinemaCLIENT.ActorServiceReference.Store Store {
            get {
                return this.StoreField;
            }
            set {
                if ((object.ReferenceEquals(this.StoreField, value) != true)) {
                    this.StoreField = value;
                    this.RaisePropertyChanged("Store");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StoreID {
            get {
                return this.StoreIDField;
            }
            set {
                if ((this.StoreIDField.Equals(value) != true)) {
                    this.StoreIDField = value;
                    this.RaisePropertyChanged("StoreID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Staff", Namespace="http://schemas.datacontract.org/2004/07/FilmLibrary.Les_Modeles")]
    [System.SerializableAttribute()]
    public partial class Staff : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CinemaCLIENT.ActorServiceReference.Adresse AdresseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AdresseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CinemaCLIENT.ActorServiceReference.Payment[] PaymentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] PictureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrenomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CinemaCLIENT.ActorServiceReference.Rental[] RentalsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CinemaCLIENT.ActorServiceReference.Store StoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StoreIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CinemaCLIENT.ActorServiceReference.Adresse Adresse {
            get {
                return this.AdresseField;
            }
            set {
                if ((object.ReferenceEquals(this.AdresseField, value) != true)) {
                    this.AdresseField = value;
                    this.RaisePropertyChanged("Adresse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AdresseID {
            get {
                return this.AdresseIDField;
            }
            set {
                if ((this.AdresseIDField.Equals(value) != true)) {
                    this.AdresseIDField = value;
                    this.RaisePropertyChanged("AdresseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nom {
            get {
                return this.NomField;
            }
            set {
                if ((object.ReferenceEquals(this.NomField, value) != true)) {
                    this.NomField = value;
                    this.RaisePropertyChanged("Nom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Passwd {
            get {
                return this.PasswdField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswdField, value) != true)) {
                    this.PasswdField = value;
                    this.RaisePropertyChanged("Passwd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CinemaCLIENT.ActorServiceReference.Payment[] Payments {
            get {
                return this.PaymentsField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentsField, value) != true)) {
                    this.PaymentsField = value;
                    this.RaisePropertyChanged("Payments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Picture {
            get {
                return this.PictureField;
            }
            set {
                if ((object.ReferenceEquals(this.PictureField, value) != true)) {
                    this.PictureField = value;
                    this.RaisePropertyChanged("Picture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prenom {
            get {
                return this.PrenomField;
            }
            set {
                if ((object.ReferenceEquals(this.PrenomField, value) != true)) {
                    this.PrenomField = value;
                    this.RaisePropertyChanged("Prenom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CinemaCLIENT.ActorServiceReference.Rental[] Rentals {
            get {
                return this.RentalsField;
            }
            set {
                if ((object.ReferenceEquals(this.RentalsField, value) != true)) {
                    this.RentalsField = value;
                    this.RaisePropertyChanged("Rentals");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CinemaCLIENT.ActorServiceReference.Store Store {
            get {
                return this.StoreField;
            }
            set {
                if ((object.ReferenceEquals(this.StoreField, value) != true)) {
                    this.StoreField = value;
                    this.RaisePropertyChanged("Store");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StoreID {
            get {
                return this.StoreIDField;
            }
            set {
                if ((this.StoreIDField.Equals(value) != true)) {
                    this.StoreIDField = value;
                    this.RaisePropertyChanged("StoreID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="City", Namespace="http://schemas.datacontract.org/2004/07/FilmLibrary.Les_Modeles")]
    [System.SerializableAttribute()]
    public partial class City : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CinemaCLIENT.ActorServiceReference.Country CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CinemaCLIENT.ActorServiceReference.Country Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountryID {
            get {
                return this.CountryIDField;
            }
            set {
                if ((this.CountryIDField.Equals(value) != true)) {
                    this.CountryIDField = value;
                    this.RaisePropertyChanged("CountryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nom {
            get {
                return this.NomField;
            }
            set {
                if ((object.ReferenceEquals(this.NomField, value) != true)) {
                    this.NomField = value;
                    this.RaisePropertyChanged("Nom");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Country", Namespace="http://schemas.datacontract.org/2004/07/FilmLibrary.Les_Modeles")]
    [System.SerializableAttribute()]
    public partial class Country : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CinemaCLIENT.ActorServiceReference.City[] CitiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CinemaCLIENT.ActorServiceReference.City[] Cities {
            get {
                return this.CitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.CitiesField, value) != true)) {
                    this.CitiesField = value;
                    this.RaisePropertyChanged("Cities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nom {
            get {
                return this.NomField;
            }
            set {
                if ((object.ReferenceEquals(this.NomField, value) != true)) {
                    this.NomField = value;
                    this.RaisePropertyChanged("Nom");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Payment", Namespace="http://schemas.datacontract.org/2004/07/FilmLibrary.Les_Modeles")]
    [System.SerializableAttribute()]
    public partial class Payment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CinemaCLIENT.ActorServiceReference.Customer CustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CinemaCLIENT.ActorServiceReference.Rental RentalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RentalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CinemaCLIENT.ActorServiceReference.Staff StaffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StaffIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CinemaCLIENT.ActorServiceReference.Customer Customer {
            get {
                return this.CustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerField, value) != true)) {
                    this.CustomerField = value;
                    this.RaisePropertyChanged("Customer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerID {
            get {
                return this.CustomerIDField;
            }
            set {
                if ((this.CustomerIDField.Equals(value) != true)) {
                    this.CustomerIDField = value;
                    this.RaisePropertyChanged("CustomerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CinemaCLIENT.ActorServiceReference.Rental Rental {
            get {
                return this.RentalField;
            }
            set {
                if ((object.ReferenceEquals(this.RentalField, value) != true)) {
                    this.RentalField = value;
                    this.RaisePropertyChanged("Rental");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RentalID {
            get {
                return this.RentalIDField;
            }
            set {
                if ((this.RentalIDField.Equals(value) != true)) {
                    this.RentalIDField = value;
                    this.RaisePropertyChanged("RentalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CinemaCLIENT.ActorServiceReference.Staff Staff {
            get {
                return this.StaffField;
            }
            set {
                if ((object.ReferenceEquals(this.StaffField, value) != true)) {
                    this.StaffField = value;
                    this.RaisePropertyChanged("Staff");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StaffID {
            get {
                return this.StaffIDField;
            }
            set {
                if ((this.StaffIDField.Equals(value) != true)) {
                    this.StaffIDField = value;
                    this.RaisePropertyChanged("StaffID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Rental", Namespace="http://schemas.datacontract.org/2004/07/FilmLibrary.Les_Modeles")]
    [System.SerializableAttribute()]
    public partial class Rental : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CinemaCLIENT.ActorServiceReference.Customer CustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CinemaCLIENT.ActorServiceReference.Inventory InventoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InventoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ReturnDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CinemaCLIENT.ActorServiceReference.Staff StaffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StaffIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CinemaCLIENT.ActorServiceReference.Customer Customer {
            get {
                return this.CustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerField, value) != true)) {
                    this.CustomerField = value;
                    this.RaisePropertyChanged("Customer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerID {
            get {
                return this.CustomerIDField;
            }
            set {
                if ((this.CustomerIDField.Equals(value) != true)) {
                    this.CustomerIDField = value;
                    this.RaisePropertyChanged("CustomerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CinemaCLIENT.ActorServiceReference.Inventory Inventory {
            get {
                return this.InventoryField;
            }
            set {
                if ((object.ReferenceEquals(this.InventoryField, value) != true)) {
                    this.InventoryField = value;
                    this.RaisePropertyChanged("Inventory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InventoryID {
            get {
                return this.InventoryIDField;
            }
            set {
                if ((this.InventoryIDField.Equals(value) != true)) {
                    this.InventoryIDField = value;
                    this.RaisePropertyChanged("InventoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReturnDate {
            get {
                return this.ReturnDateField;
            }
            set {
                if ((this.ReturnDateField.Equals(value) != true)) {
                    this.ReturnDateField = value;
                    this.RaisePropertyChanged("ReturnDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CinemaCLIENT.ActorServiceReference.Staff Staff {
            get {
                return this.StaffField;
            }
            set {
                if ((object.ReferenceEquals(this.StaffField, value) != true)) {
                    this.StaffField = value;
                    this.RaisePropertyChanged("Staff");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StaffID {
            get {
                return this.StaffIDField;
            }
            set {
                if ((this.StaffIDField.Equals(value) != true)) {
                    this.StaffIDField = value;
                    this.RaisePropertyChanged("StaffID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Inventory", Namespace="http://schemas.datacontract.org/2004/07/FilmLibrary.Les_Modeles")]
    [System.SerializableAttribute()]
    public partial class Inventory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CinemaCLIENT.ActorServiceReference.Film FilmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FilmIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CinemaCLIENT.ActorServiceReference.Store StoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StoreIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CinemaCLIENT.ActorServiceReference.Film Film {
            get {
                return this.FilmField;
            }
            set {
                if ((object.ReferenceEquals(this.FilmField, value) != true)) {
                    this.FilmField = value;
                    this.RaisePropertyChanged("Film");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FilmID {
            get {
                return this.FilmIDField;
            }
            set {
                if ((this.FilmIDField.Equals(value) != true)) {
                    this.FilmIDField = value;
                    this.RaisePropertyChanged("FilmID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CinemaCLIENT.ActorServiceReference.Store Store {
            get {
                return this.StoreField;
            }
            set {
                if ((object.ReferenceEquals(this.StoreField, value) != true)) {
                    this.StoreField = value;
                    this.RaisePropertyChanged("Store");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StoreID {
            get {
                return this.StoreIDField;
            }
            set {
                if ((this.StoreIDField.Equals(value) != true)) {
                    this.StoreIDField = value;
                    this.RaisePropertyChanged("StoreID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ActorServiceReference.IActorService")]
    public interface IActorService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActorService/Add", ReplyAction="http://tempuri.org/IActorService/AddResponse")]
        CinemaCLIENT.ActorServiceReference.Actor Add(CinemaCLIENT.ActorServiceReference.Actor acteur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActorService/Add", ReplyAction="http://tempuri.org/IActorService/AddResponse")]
        System.Threading.Tasks.Task<CinemaCLIENT.ActorServiceReference.Actor> AddAsync(CinemaCLIENT.ActorServiceReference.Actor acteur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActorService/Modifier", ReplyAction="http://tempuri.org/IActorService/ModifierResponse")]
        int Modifier(string anciennom, string ancienprenom, string nouveaunom, string nouveauprenom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActorService/Modifier", ReplyAction="http://tempuri.org/IActorService/ModifierResponse")]
        System.Threading.Tasks.Task<int> ModifierAsync(string anciennom, string ancienprenom, string nouveaunom, string nouveauprenom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActorService/FindAll", ReplyAction="http://tempuri.org/IActorService/FindAllResponse")]
        CinemaCLIENT.ActorServiceReference.Actor[] FindAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActorService/FindAll", ReplyAction="http://tempuri.org/IActorService/FindAllResponse")]
        System.Threading.Tasks.Task<CinemaCLIENT.ActorServiceReference.Actor[]> FindAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActorService/Find", ReplyAction="http://tempuri.org/IActorService/FindResponse")]
        CinemaCLIENT.ActorServiceReference.Actor Find(int acteurId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActorService/Find", ReplyAction="http://tempuri.org/IActorService/FindResponse")]
        System.Threading.Tasks.Task<CinemaCLIENT.ActorServiceReference.Actor> FindAsync(int acteurId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActorService/FindByName", ReplyAction="http://tempuri.org/IActorService/FindByNameResponse")]
        CinemaCLIENT.ActorServiceReference.Actor FindByName(string nom, string prenom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActorService/FindByName", ReplyAction="http://tempuri.org/IActorService/FindByNameResponse")]
        System.Threading.Tasks.Task<CinemaCLIENT.ActorServiceReference.Actor> FindByNameAsync(string nom, string prenom);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IActorServiceChannel : CinemaCLIENT.ActorServiceReference.IActorService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ActorServiceClient : System.ServiceModel.ClientBase<CinemaCLIENT.ActorServiceReference.IActorService>, CinemaCLIENT.ActorServiceReference.IActorService {
        
        public ActorServiceClient() {
        }
        
        public ActorServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ActorServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ActorServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ActorServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CinemaCLIENT.ActorServiceReference.Actor Add(CinemaCLIENT.ActorServiceReference.Actor acteur) {
            return base.Channel.Add(acteur);
        }
        
        public System.Threading.Tasks.Task<CinemaCLIENT.ActorServiceReference.Actor> AddAsync(CinemaCLIENT.ActorServiceReference.Actor acteur) {
            return base.Channel.AddAsync(acteur);
        }
        
        public int Modifier(string anciennom, string ancienprenom, string nouveaunom, string nouveauprenom) {
            return base.Channel.Modifier(anciennom, ancienprenom, nouveaunom, nouveauprenom);
        }
        
        public System.Threading.Tasks.Task<int> ModifierAsync(string anciennom, string ancienprenom, string nouveaunom, string nouveauprenom) {
            return base.Channel.ModifierAsync(anciennom, ancienprenom, nouveaunom, nouveauprenom);
        }
        
        public CinemaCLIENT.ActorServiceReference.Actor[] FindAll() {
            return base.Channel.FindAll();
        }
        
        public System.Threading.Tasks.Task<CinemaCLIENT.ActorServiceReference.Actor[]> FindAllAsync() {
            return base.Channel.FindAllAsync();
        }
        
        public CinemaCLIENT.ActorServiceReference.Actor Find(int acteurId) {
            return base.Channel.Find(acteurId);
        }
        
        public System.Threading.Tasks.Task<CinemaCLIENT.ActorServiceReference.Actor> FindAsync(int acteurId) {
            return base.Channel.FindAsync(acteurId);
        }
        
        public CinemaCLIENT.ActorServiceReference.Actor FindByName(string nom, string prenom) {
            return base.Channel.FindByName(nom, prenom);
        }
        
        public System.Threading.Tasks.Task<CinemaCLIENT.ActorServiceReference.Actor> FindByNameAsync(string nom, string prenom) {
            return base.Channel.FindByNameAsync(nom, prenom);
        }
    }
}
